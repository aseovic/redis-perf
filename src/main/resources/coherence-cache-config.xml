<?xml version="1.0"?>
<!--
  Copyright (c) 2000, 2020, Oracle and/or its affiliates.

  Licensed under the Universal Permissive License v 1.0 as shown at
  http://oss.oracle.com/licenses/upl.
-->
<!--
This XML document is a default Coherence Cache Configuration deployment descriptor that should be
customized (or replaced) for your particular caching and deployment requirements.

This configuration is usable in servers, proxies, clustered clients, and non-clustered extend clients.

When used from within a server such a DefaultCacheServer, the server will automatically host a storage enabled cache
service as well as a proxy service to allow extend clients to access the caches.  Clients using the configuration are
storage disabled by default.

This configuration defines a number of inter-related cache schemes:

 - server       - this scheme defines the storage tier for all caches
 - thin-direct  - this scheme is for use by cluster members to access the caches hosted by the "server" scheme
 - near-direct  - this scheme adds near caching to "thin-direct"
 - thin-remote  - conceptually similar to "thin-direct" but for use by extend clients
 - near-remote  - conceptually similar to "near-direct" but for use by extend clients
 - topic-server - this scheme defines the storage tier for all topics


The default scheme for caches is "near-direct".  This default can be overridden via two system properties.  The
"coherence.profile" system property controls the first portion of the scheme name and defines the approach used for
in-process caching, i.e. "near" (on-demand) or "thin" (none).  The "coherence.client" system property controls how a
client connects to the cluster, i.e. "direct" (cluster member) or "remote" (extend client).

Note: System properties defined within this cache configuration are specific to this configuration and are not
meaningful to other cache configurations unless similarly defined there.
-->
<cache-config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
              xmlns="http://xmlns.oracle.com/coherence/coherence-cache-config"
              xsi:schemaLocation="http://xmlns.oracle.com/coherence/coherence-cache-config coherence-cache-config.xsd">
  <defaults>
    <scope-name>${coherence.scope}</scope-name>
    <serializer>pof</serializer>
  </defaults>

  <caching-scheme-mapping>
    <cache-mapping>
      <cache-name>near-*</cache-name>
      <scheme-name>near-${coherence.client direct}</scheme-name>
    </cache-mapping>
    <cache-mapping>
      <cache-name>safe-*</cache-name>
      <scheme-name>safe-${coherence.client direct}</scheme-name>
    </cache-mapping>
    <cache-mapping>
      <cache-name>concurrent-*</cache-name>
      <scheme-name>concurrent-${coherence.client direct}</scheme-name>
    </cache-mapping>
    <cache-mapping>
      <cache-name>rj-*</cache-name>
      <scheme-name>rj-${coherence.client direct}</scheme-name>
    </cache-mapping>
    <cache-mapping>
      <cache-name>fj-*</cache-name>
      <scheme-name>fj-${coherence.client direct}</scheme-name>
    </cache-mapping>
    <cache-mapping>
      <cache-name>cm-*</cache-name>
      <scheme-name>cm-${coherence.client direct}</scheme-name>
    </cache-mapping>
    <cache-mapping>
      <cache-name>*</cache-name>
      <scheme-name>thin-${coherence.client direct}</scheme-name>
    </cache-mapping>
  </caching-scheme-mapping>

  <caching-schemes>
    <!-- near caching scheme for clustered clients -->
    <near-scheme>
      <scheme-name>near-direct</scheme-name>
      <front-scheme>
        <local-scheme>
          <high-units>{front-limit-entries 10000}</high-units>
        </local-scheme>
      </front-scheme>
      <back-scheme>
        <distributed-scheme>
          <scheme-ref>thin-direct</scheme-ref>
        </distributed-scheme>
      </back-scheme>
    </near-scheme>

    <!-- near caching scheme for extend clients -->
    <near-scheme>
      <scheme-name>near-remote</scheme-name>
      <scheme-ref>near-direct</scheme-ref>
      <back-scheme>
        <remote-cache-scheme>
          <scheme-ref>thin-remote</scheme-ref>
        </remote-cache-scheme>
      </back-scheme>
    </near-scheme>

    <!-- remote caching scheme for accessing the proxy from extend clients -->
    <remote-cache-scheme>
      <scheme-name>thin-remote</scheme-name>
      <service-name>RemoteCache</service-name>
      <proxy-service-name>Proxy</proxy-service-name>
    </remote-cache-scheme>

    <!-- partitioned caching scheme for clustered clients -->
    <distributed-scheme>
      <scheme-name>thin-direct</scheme-name>
      <scheme-ref>server</scheme-ref>
      <local-storage system-property="coherence.distributed.localstorage">false</local-storage>
      <autostart>false</autostart>
    </distributed-scheme>

    <!-- partitioned caching scheme for clustered clients -->
    <distributed-scheme>
      <scheme-name>safe-direct</scheme-name>
      <scheme-ref>safe-server</scheme-ref>
      <local-storage system-property="coherence.distributed.localstorage">false</local-storage>
      <autostart>false</autostart>
    </distributed-scheme>

    <!-- partitioned caching scheme for clustered clients -->
    <distributed-scheme>
      <scheme-name>concurrent-direct</scheme-name>
      <scheme-ref>concurrent-server</scheme-ref>
      <local-storage system-property="coherence.distributed.localstorage">false</local-storage>
      <autostart>false</autostart>
    </distributed-scheme>

    <!-- partitioned caching scheme for clustered clients -->
    <distributed-scheme>
      <scheme-name>rj-direct</scheme-name>
      <scheme-ref>rj-server</scheme-ref>
      <local-storage system-property="coherence.distributed.localstorage">false</local-storage>
      <autostart>false</autostart>
    </distributed-scheme>

    <!-- partitioned caching scheme for clustered clients -->
    <distributed-scheme>
      <scheme-name>fj-direct</scheme-name>
      <scheme-ref>fj-server</scheme-ref>
      <local-storage system-property="coherence.distributed.localstorage">false</local-storage>
      <autostart>false</autostart>
    </distributed-scheme>

    <!-- partitioned caching scheme for clustered clients -->
    <distributed-scheme>
      <scheme-name>cm-direct</scheme-name>
      <scheme-ref>cm-server</scheme-ref>
      <local-storage system-property="coherence.distributed.localstorage">false</local-storage>
      <autostart>false</autostart>
    </distributed-scheme>

    <!-- partitioned caching scheme for servers -->
    <distributed-scheme>
      <scheme-name>server</scheme-name>
      <service-name>LocalCacheService</service-name>
      <local-storage system-property="coherence.distributed.localstorage">true</local-storage>
      <backing-map-scheme>
        <local-scheme>
          <unit-calculator>BINARY</unit-calculator>
        </local-scheme>
      </backing-map-scheme>
      <autostart>true</autostart>
      <async-backup system-property="coherence.backup.async">false</async-backup>
    </distributed-scheme>

    <!-- partitioned caching scheme for servers -->
    <distributed-scheme>
      <scheme-name>safe-server</scheme-name>
      <service-name>SafeHashMapService</service-name>
      <local-storage system-property="coherence.distributed.localstorage">true</local-storage>
      <backing-map-scheme>
        <class-scheme>
          <class-name>com.tangosol.util.SafeHashMap</class-name>
        </class-scheme>
      </backing-map-scheme>
      <autostart>true</autostart>
      <async-backup system-property="coherence.backup.async">false</async-backup>
    </distributed-scheme>

    <!-- partitioned caching scheme for servers -->
    <distributed-scheme>
      <scheme-name>concurrent-server</scheme-name>
      <service-name>ConcurrentMapService</service-name>
      <local-storage system-property="coherence.distributed.localstorage">true</local-storage>
      <backing-map-scheme>
        <class-scheme>
          <class-name>java.util.concurrent.ConcurrentHashMap</class-name>
        </class-scheme>
      </backing-map-scheme>
      <autostart>true</autostart>
      <async-backup system-property="coherence.backup.async">false</async-backup>
    </distributed-scheme>

    <!-- partitioned caching scheme for servers -->
    <distributed-scheme>
      <scheme-name>rj-server</scheme-name>
      <service-name>RamJournalService</service-name>
      <local-storage system-property="coherence.distributed.localstorage">true</local-storage>
      <backing-map-scheme>
        <ramjournal-scheme>
          <unit-calculator>BINARY</unit-calculator>
        </ramjournal-scheme>
      </backing-map-scheme>
      <autostart>true</autostart>
      <async-backup system-property="coherence.backup.async">false</async-backup>
    </distributed-scheme>

    <!-- partitioned caching scheme for servers -->
    <distributed-scheme>
      <scheme-name>fj-server</scheme-name>
      <service-name>FlashJournalService</service-name>
      <local-storage system-property="coherence.distributed.localstorage">true</local-storage>
      <backing-map-scheme>
        <flashjournal-scheme>
          <unit-calculator>BINARY</unit-calculator>
        </flashjournal-scheme>
      </backing-map-scheme>
      <autostart>true</autostart>
      <async-backup system-property="coherence.backup.async">false</async-backup>
    </distributed-scheme>

    <!-- partitioned caching scheme for servers -->
    <distributed-scheme>
      <scheme-name>cm-server</scheme-name>
      <service-name>ChronicleMapService</service-name>
      <local-storage system-property="coherence.distributed.localstorage">true</local-storage>
      <backing-map-scheme>
        <class-scheme>
          <class-factory-name>coherence.ChronicleMapFactory</class-factory-name>
          <method-name>create</method-name>
        </class-scheme>
      </backing-map-scheme>
      <autostart>true</autostart>
      <async-backup system-property="coherence.backup.async">false</async-backup>
    </distributed-scheme>

    <!-- proxy scheme that allows extend clients to connect to the cluster over TCP/IP -->
    <proxy-scheme>
      <service-name>Proxy</service-name>
      <autostart system-property="coherence.proxy.enabled">false</autostart>
    </proxy-scheme>
  </caching-schemes>
</cache-config>
